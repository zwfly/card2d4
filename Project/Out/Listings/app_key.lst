C51 COMPILER V9.56.0.0   APP_KEY                                                           12/14/2017 21:21:41 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE APP_KEY
OBJECT MODULE PLACED IN .\Out\Objects\app_key.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_key.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\inc
                    -;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_key.lst) OBJEC
                    -T(.\Out\Objects\app_key.obj)

line level    source

   1          /*
   2           * app_key.c
   3           *
   4           *  Created on: 2017年7月7日
   5           *      Author: admin
   6           */
   7          
   8          #include "app.h"
   9          
  10          static uint8_t press_long_lock = 0;
  11          
  12          //static idata uint8_t buf[PAYLOAD_WIDTH] = {0};
  13          #if 0
              void app_key_init(void) {
              
              }
              
              void app_power_on(void) {
                      SW_Reset();  //复位
              }
              void app_power_off(void) {
              //      lcd_bright_off();
                      LCD_Clear_All();
              }
              #endif
  26          
  27          static void app_send_key(uint8_t key, uint8_t *index) {
  28   1              uint8_t i = 0;
  29   1              Repeat_Stop();
  30   1              Repeat_SetStart(bsp_led_on);
  31   1              Repeat_SetStop(bsp_led_off);
  32   1              Repeat_Start(3, 1, 1);
  33   1      
  34   1              sendBuf[(*index)++] = LCD2LAMP_HEADER;
  35   1              sendBuf[(*index)++] = 0x01;
  36   1              sendBuf[(*index)++] = key;
  37   1              for (i = 0; i < (sendBuf[1] + 1); i++) {
  38   2                      sendBuf[*index] += sendBuf[i + 1];
  39   2              }
  40   1      }
  41          
  42          void app_key_pro(uint8_t keyCode) {
  43   1              uint8_t index = 0;
  44   1              uint8_t i = 0;
  45   1      #if 0
                      Repeat_Stop();
              
                      Repeat_SetStart(bsp_led_on);
                      Repeat_SetStop(bsp_led_off);
                      Repeat_Start(5, 1, 1);
              #endif
  52   1      
  53   1              index = 0;
C51 COMPILER V9.56.0.0   APP_KEY                                                           12/14/2017 21:21:41 PAGE 2   

  54   1              memset(sendBuf, 0, PAYLOAD_WIDTH);
  55   1              switch (keyCode) {
  56   2              case KEY_UP_K1:   //mode power
  57   2                      if (press_long_lock == 0) {
  58   3                              app_send_key(KEY_MODE_POWER_CMD, &index);
  59   3                      }
  60   2                      press_long_lock = 0;
  61   2                      break;
  62   2              case KEY_DOWN_K1:
  63   2      
  64   2                      break;
  65   2              case KEY_LONG_K1:   //power long
  66   2                      press_long_lock = 1;
  67   2                      app_send_key(KEY_MODE_POWER_LONG_CMD, &index);
  68   2                      break;
  69   2              case KEY_UP_K2:   //prev vol-
  70   2                      if (press_long_lock == 0) {
  71   3                              app_send_key(KEY_PREV_VOL_MINUS_CMD, &index);
  72   3                      }
  73   2                      press_long_lock = 0;
  74   2                      break;
  75   2              case KEY_DOWN_K2:
  76   2                      if (press_long_lock) {
  77   3                              app_send_key(KEY_PREV_VOL_MINUS_LONG_CMD, &index);
  78   3                      }
  79   2                      break;
  80   2              case KEY_LONG_K2:
  81   2                      press_long_lock = 1;
  82   2                      app_send_key(KEY_PREV_VOL_MINUS_LONG_CMD, &index);
  83   2                      break;
  84   2              case KEY_UP_K3:   // play BT
  85   2                      if (press_long_lock == 0) {
  86   3                              app_send_key(KEY_PLAY_BT_CALL_CMD, &index);
  87   3                      }
  88   2                      press_long_lock = 0;
  89   2                      break;
  90   2              case KEY_DOWN_K3:
  91   2                      break;
  92   2              case KEY_LONG_K3:
  93   2                      press_long_lock = 1;
  94   2                      app_send_key(KEY_PLAY_BT_CALL_LONG_CMD, &index);
  95   2                      break;
  96   2              case KEY_UP_K4:   // next vol+
  97   2                      if (press_long_lock == 0) {
  98   3                              app_send_key(KEY_NEXT_VOL_ADD_CMD, &index);
  99   3                      }
 100   2                      press_long_lock = 0;
 101   2                      break;
 102   2              case KEY_DOWN_K4:
 103   2                      if (press_long_lock) {
 104   3                              app_send_key(KEY_NEXT_VOL_ADD_LONG_CMD, &index);
 105   3                      }
 106   2                      break;
 107   2              case KEY_LONG_K4:
 108   2                      press_long_lock = 1;
 109   2                      app_send_key(KEY_NEXT_VOL_ADD_LONG_CMD, &index);
 110   2                      break;
 111   2              case KEY_UP_K5:   //power
 112   2                      app_send_key(KEY_POWER_CMD, &index);
 113   2                      break;
 114   2              case KEY_DOWN_K5:
 115   2                      break;
C51 COMPILER V9.56.0.0   APP_KEY                                                           12/14/2017 21:21:41 PAGE 3   

 116   2              case KEY_LONG_K5:
 117   2                      break;
 118   2              case KEY_UP_K6:   // NC
 119   2                      break;
 120   2              case KEY_DOWN_K6:
 121   2                      break;
 122   2              case KEY_LONG_K6:
 123   2                      break;
 124   2              case KEY_UP_K7:   // mode+
 125   2                      break;
 126   2              case KEY_DOWN_K7:
 127   2                      app_send_key(KEY_MODE_ADD_CMD, &index);
 128   2                      break;
 129   2              case KEY_LONG_K7:
 130   2                      break;
 131   2              case KEY_UP_K8:   // NC
 132   2                      break;
 133   2              case KEY_DOWN_K8:
 134   2                      break;
 135   2              case KEY_LONG_K8:
 136   2                      break;
 137   2              case KEY_UP_K9:   // NC
 138   2                      break;
 139   2              case KEY_DOWN_K9:
 140   2                      break;
 141   2              case KEY_LONG_K9:
 142   2                      break;
 143   2              case KEY_UP_K10:   //speed+
 144   2                      break;
 145   2              case KEY_DOWN_K10:
 146   2                      app_send_key(KEY_SPEED_ADD_CMD, &index);
 147   2                      break;
 148   2              case KEY_LONG_K10:
 149   2                      break;
 150   2              case KEY_UP_K11:   //DEMO
 151   2                      app_send_key(KEY_DEMO_CMD, &index);
 152   2                      break;
 153   2              case KEY_DOWN_K11:
 154   2                      break;
 155   2              case KEY_LONG_K11:
 156   2                      break;
 157   2              case KEY_UP_K12:   //speed-
 158   2                      break;
 159   2              case KEY_DOWN_K12:
 160   2                      app_send_key(KEY_SPEED_MINUS_CMD, &index);
 161   2                      break;
 162   2              case KEY_LONG_K12:
 163   2                      break;
 164   2              case KEY_UP_K13:   // NC
 165   2                      break;
 166   2              case KEY_DOWN_K13:
 167   2                      break;
 168   2              case KEY_LONG_K13:
 169   2                      break;
 170   2              case KEY_UP_K14:   // COLOR+
 171   2                      break;
 172   2              case KEY_DOWN_K14:
 173   2                      app_send_key(KEY_COLOR_ADD_CMD, &index);
 174   2                      break;
 175   2              case KEY_LONG_K14:
 176   2                      break;
 177   2              case KEY_UP_K15:   // MODE-
C51 COMPILER V9.56.0.0   APP_KEY                                                           12/14/2017 21:21:41 PAGE 4   

 178   2                      break;
 179   2              case KEY_DOWN_K15:
 180   2                      app_send_key(KEY_MODE_CMD, &index);
 181   2                      break;
 182   2              case KEY_LONG_K15:
 183   2                      break;
 184   2              case KEY_UP_K16:   // bright+
 185   2                      break;
 186   2              case KEY_DOWN_K16:
 187   2                      app_send_key(KEY_BRIGHT_ADD_CMD, &index);
 188   2                      break;
 189   2              case KEY_LONG_K16:
 190   2                      break;
 191   2              case KEY_UP_K17:   // NC
 192   2                      break;
 193   2              case KEY_DOWN_K17:
 194   2                      break;
 195   2              case KEY_LONG_K17:
 196   2                      break;
 197   2              case KEY_UP_K18:   // COLOR-
 198   2                      break;
 199   2              case KEY_DOWN_K18:
 200   2                      app_send_key(KEY_COLOR_MINUS_CMD, &index);
 201   2                      break;
 202   2              case KEY_LONG_K18:
 203   2                      break;
 204   2              case KEY_UP_K19:   // NC
 205   2                      break;
 206   2              case KEY_DOWN_K19:
 207   2                      break;
 208   2              case KEY_LONG_K19:
 209   2                      break;
 210   2              case KEY_UP_K20:   // bright-
 211   2                      break;
 212   2              case KEY_DOWN_K20:
 213   2                      app_send_key(KEY_BRIGHT_MINUS_CMD, &index);
 214   2                      break;
 215   2              case KEY_LONG_K20:
 216   2                      break;
 217   2              case KEY_UP_K21:   // num 1
 218   2                      break;
 219   2              case KEY_DOWN_K21:
 220   2                      app_send_key(KEY_NUM_1_CMD, &index);
 221   2                      break;
 222   2              case KEY_LONG_K21:
 223   2                      break;
 224   2              case KEY_UP_K22:   // num 2
 225   2                      app_send_key(KEY_NUM_2_CMD, &index);
 226   2                      break;
 227   2              case KEY_DOWN_K22:
 228   2                      break;
 229   2              case KEY_LONG_K22:
 230   2                      break;
 231   2              case KEY_UP_K23:   // num 3
 232   2                      app_send_key(KEY_NUM_3_CMD, &index);
 233   2                      break;
 234   2              case KEY_DOWN_K23:
 235   2                      break;
 236   2              case KEY_LONG_K23:
 237   2                      break;
 238   2              case KEY_UP_K24:   // num 4
 239   2                      app_send_key(KEY_NUM_4_CMD, &index);
C51 COMPILER V9.56.0.0   APP_KEY                                                           12/14/2017 21:21:41 PAGE 5   

 240   2                      break;
 241   2              case KEY_DOWN_K24:
 242   2                      break;
 243   2              case KEY_LONG_K24:
 244   2                      break;
 245   2              default:
 246   2                      break;
 247   2              }
 248   1              if (index) {
 249   2                      index++;
 250   2                      app_2d4_send(sendBuf, index);
 251   2              }
 252   1      
 253   1      }
 254          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    804    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
